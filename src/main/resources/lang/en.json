{
	"misc.add": "Add",
	"misc.insert": "Insert",
	"misc.save": "Save",
	"misc.load": "Load",
	"misc.remove": "Remove",
	"misc.edit": "Edit",
	"misc.duplicate": "Duplicate",
	"misc.error": "Error",
	"misc.access": "Access",
	"misc.invalidtype.internal": "Invalid format, should be 'your/class/Name'",
	"misc.invalidtype.standard": "Invalid format, should be 'Lyour/class/Name;'",
	"misc.invalidtype.typeref": "Missing type-reference. Select one from the dropdown.",
	"misc.invalidtype.typepath": "Invalid type-path. Read 'JVMS 4.7.20.2' for more information.",
	
	"update.fail.resolve": "Could not resolve path to executable self.",
	"update.fail.jarread": "Could not read contents of pom.xml from self-jar.",
	"update.fail.nodownload": "Recaf is outdated, but the download url could not be found.",
	"update.fail.unknown": "Update check failed for reason: ",
	"update.outdated": "Recaf is outdated",
	"update.complete": "Update complete, please run the new version.",
	"update.updated": "Update check complete: No updates available",
	"update.consent": "Updating adds new features and fixes bugs. Press OK to download and run the updated version.",
	"update": "Updates",
	"update.active.name": "Allow update checking",
	"update.active.desc": "If enabled updates will be checked for according to the frequency value, then downloaded and run.",
	"update.lastcheck.name": "Last check",
	"update.lastcheck.desc": "Last time since checking for updates.",
	"update.frequency.name": "Frequency",
	"update.frequency.desc": "Minimum time between checks.",
	"update.frequency.always": "Always",
	"update.frequency.daily": "Daily",
	"update.frequency.weekly": "Weekly",

	"asm": "ASM - Bytecode",
	"asm.version.name": "Version",
	"asm.version.desc": "ASM library version to use.",
	"asm.out.computemaxs.name": "Compute maxs",
	"asm.out.computemaxs.desc": "Force ASM to compute max stack/local-table sizes.",
	"asm.out.computeframes.name": "Compute frames",
	"asm.out.computeframes.desc": "Force ASM to compute stack frames.",
	"asm.out.reflectionexport.name": "Reflection export",
	"asm.out.reflectionexport.desc": "Allow export process to lookup missing classes from runtime.",
	"asm.in.skipcode.name": "Skip Code",
	"asm.in.skipcode.desc": "Force ASM to skip method code.",
	"asm.in.skipdebug.name": "Skip Debug",
	"asm.in.skipdebug.desc": "Force ASM to skip debug information like variable names",
	"asm.in.skipframes.name": "Skip Frames",
	"asm.in.skipframes.desc": "Force ASM to skip existing stack-frames when loading a new input.",
	"asm.in.expandframes.name": "Expand Frames",
	"asm.in.expandframes.desc": "Force ASM to expand existing stack-frames into a common format.",
	"asm.edit.verify.name": "Verify",
	"asm.edit.verify.desc": "When edits create invalid bytecode, highlight the editor window. Also prevent exporting until verification passes modified classes.",
	"asm.edit.linkedmethods.name": "Linked method renaming",
	"asm.edit.linkedmethods.desc": "When renaming methods, rename all child and parent declarations too.",
	"asm.edit.locklibmethods.name": "Lock linked library names",
	"asm.edit.locklibmethods.desc": "Disallow renaming of known library methods. Requires linked method renaming to be active.",
	"asm.edit.locklibmethods.locked": "Method extends library method and has been locked to prevent accidental renaming.",
	
	"display": "Display",
	"display.simplfy.name": "Simplify type descriptors",
	"display.simplfy.desc": "Hides package names for type descriptors.",
	"display.jumphelp.name": "Inline jump help",
	"display.jumphelp.desc": "Shows opcode-specific jump logic in opcodes",
	"display.topmost.name": "Top-most editor windows",
	"display.topmost.desc": "When editing a value, keep the window as topmost.",
	"display.language.name": "Language",
	"display.language.desc": "Language to translate UI components into.",
	"display.style.name": "Style",
	"display.style.desc": "Set of stylesheets to use. The style sheets follow the pattern 'resources/style/NAME-{STYLE}.css'",
	"display.loglevel.name": "Log level",
	"display.loglevel.desc": "Level of logging to display in console.",
	"display.buttonbar.name": "Show button bar",
	"display.buttonbar.desc": "Show the easy-access button-bar in the UI. Restart to apply changes.",
	"display.maxlength.tree.name": "Max tree name length",
	"display.maxlength.tree.desc": "The max length of names in the file tree. Useful for obfuscated assemblies with crazy names.",
	"display.treesourcename.name": "Show SourceFile names",
	"display.treesourcename.desc": "Display classes SourceFile next to their declared names in the file-tree.",
	"display.exitwarning.name": "Give save prompt on exit",
	"display.exitwarning.desc": "When Recaf is closed with ask if the current project should be saved.",
	"display.exitwarning.title": "Save before closing?",
	"display.exitwarning.mesage": "Do you wish to save your work before closing?",

	"keybinds": "Keybinds",
	"keybinds.active.name": "Use keybinds",
	"keybinds.active.desc": "If disabled, keybinds will not be used.",
	"keybinds.savestate.name": "Create save-state",
	"keybinds.savestate.desc": "Saves the state of all current edits.",
	"keybinds.export.name": "Export",
	"keybinds.export.desc": "Export changed files.",
	"keybinds.open.name": "Open file",
	"keybinds.open.desc": "Open a file selection menu to select a new input.",
	"keybinds.search.name": "Search",
	"keybinds.search.desc": "Open a new search window.",
	"keybinds.copy.name": "Copy",
	"keybinds.copy.desc": "Copy the selected object(s)",
	"keybinds.paste.name": "Paste",
	"keybinds.paste.desc": "Paste the copied object(s)",
	"keybinds.find.name": "Find",
	"keybinds.find.desc": "Show search field in instruction and code windows",
	"keybinds.duplicate.name":"Duplicate Instruction(s)",
	"keybinds.duplicate.desc":"Copy and paste selection instructions.",
	"keybinds.shift_up.name":"Shift Up",
	"keybinds.shift_up.desc":"Shift up node(s).",
	"keybinds.shift_down.name":"Shift Down",
	"keybinds.shift_down.desc":"Shift down node(s).",
	
	"other": "Other",
	"other.maxrecentfiles.name": "Maximum recent files",
	"other.maxrecentfiles.desc": "The number of files to show in the 'Recent' menu.",
	
	"ui.filepropt.open": "Open file",
	"ui.fileprompt.open.extensions": "Java programs",
	"ui.filepropt.export": "Export file",
	
	"ui.menubar.file": "File",
	"ui.menubar.load": "Load",
	"ui.menubar.recent": "Recent",
	"ui.menubar.export": "Export",
	"ui.menubar.agentexport": "Apply changes",
	"ui.menubar.config": "Config",
	"ui.menubar.search": "Search",
	"ui.menubar.history": "History",
	"ui.menubar.history.new": "Create save state",
	"ui.menubar.history.view": "View states",
	"ui.menubar.attach": "Attach",
	"ui.menubar.plugins": "Plugins",
	"ui.menubar.help": "Help",
	"ui.menubar.help.about": "About",
	"ui.menubar.help.documentation": "Documentation",
	"ui.edit.tab.classinfo": "Class Information",
	"ui.edit.tab.methods": "Methods",
	"ui.edit.tab.methods.flags": "Flags",
	"ui.edit.tab.methods.name": "Name",
	"ui.edit.tab.methods.return": "Return",
	"ui.edit.tab.methods.args": "Arguments",
	"ui.edit.tab.fields": "Fields",
	"ui.edit.tab.fields.flags": "Access",
	"ui.edit.tab.fields.name": "Name",
	"ui.edit.tab.fields.type": "Type",
	"ui.edit.method.define": "Open definition",
	"ui.edit.method.editasm": "Edit with assembler",
	"ui.edit.method.assemblyfirsterror": "First error on line",
	"ui.edit.method.insertstandard": "Insert",
	"ui.edit.method.insertassembly": "Insert with assembler",
	"ui.edit.method.move.up": "Shift up",
	"ui.edit.method.move.down": "Shift down",
	"ui.edit.method.stackhelper": "Show stack/locals",
	"ui.edit.method.stackhelper.colstackopcode": "Stack source opcode",
	"ui.edit.method.stackhelper.colstackvalue": "Value",
	"ui.edit.method.stackhelper.collocalopcode": "Local source opcode",
	"ui.edit.method.stackhelper.collocalvalue": "Value",
	"ui.edit.method.stackhelper.colindex": "Index",
	"ui.edit.method.stackhelper.title": "Stack/Locals: ",
	"ui.edit.method.search": "Search references",
	"ui.edit.method.block.title": "Blocks",
	"ui.edit.method.block.save": "Save as block",
	"ui.edit.method.block.load": "Insert block",
	"ui.edit.method.insert": "Insertion location",
	"ui.edit.method.insert.title": "Insert opcode: ",
	"ui.edit.method.insert.after": "After",
	"ui.edit.method.insert.before": "Before",
				
	"ui.verify": "Verification failed",
	"ui.config": "Config",
	"ui.history": "History",
	"ui.history.pop": "Revert to last",
	"ui.info.logging": "Logging",
	"ui.info.other": "Other",
	"ui.attach": "Attach",
	"ui.quitonattach.name": "Quit on attach",
	"ui.quitonattach.desc": "Close the current Recaf instance when the agent instance is loaded.",
	"ui.attach.prompt": "Select a virtual machine...",
	"ui.search": "Search",
	"ui.search.skipped": "Ignored prefixes",
	"ui.search.results": "Results",
	"ui.search.string": "Strings",
	"ui.search.value": "Values",
	"ui.search.opcode": "Opcode patterns",
	"ui.search.declare": "Declarations",
	"ui.search.reference": "References",
	"ui.search.mode.contains": "Contains",
	"ui.search.mode.startswith": "Starts With",
	"ui.search.mode.endswith": "Ends With",
	"ui.search.mode.equality": "Equality",
	"ui.search.mode.regex": "Regex",
	"params": "Parameters",
	"params.desc.desc": "Type descriptor.",
	"params.desc.name": "Descriptor",
	"params.ignored.desc": "List of ignored class prefixes. Classes starting with the values in this list will be hidden from search results.",
	"params.ignored.name": "Ignored prefixes",
	"params.mode.desc": "Mode of string comparison for checking against potential results.",
	"params.mode.name": "Match mode",
	"params.name.desc": "Member name.",
	"params.name.name": "Name",
	"params.opcode.desc": "List of opcodes to search for sequentially.",
	"params.opcode.name": "Opcodes",
	"params.owner.desc": "Class that contains the member.",
	"params.owner.name": "Owner",
	"params.sensitive.desc": "Additionally to matching mode, should string cases be accounted for.",
	"params.sensitive.name": "Case sensitive",
	"params.text.desc": "Text to search for.",
	"params.text.name": "Text",
	"params.value.desc": "Value to search for.",
	"params.value.name": "Value",
	
	"ui.bean.class": "Properties",
	"ui.bean.class.extended": "Properties Extended",
	"ui.bean.class.version.name": "Version",
	"ui.bean.class.version.desc": "Java version class was compiled with.",
	"ui.bean.class.access.name": "Access",
	"ui.bean.class.access.desc": "Access permissions such as public, private, static, etc.",
	"ui.bean.class.name.name": "Name",
	"ui.bean.class.name.desc": "Name of class.",
	"ui.bean.class.signature.name": "Signature",
	"ui.bean.class.signature.desc": "Generic type descriptor.",
	"ui.bean.class.supername.name": "Super name",
	"ui.bean.class.supername.desc": "Name of parent class",
	"ui.bean.class.sourcefile.name": "Source file.",
	"ui.bean.class.sourcefile.desc": "Name of source file class was written in.",
	"ui.bean.class.sourcedebug.name": "Source debug",
	"ui.bean.class.sourcedebug.desc": "Used to identify source language class was compiled from. Read JSR-045 for more information.",
	"ui.bean.class.outerclass.name": "Outer class",
	"ui.bean.class.outerclass.desc": "Name of outer class, the class this was written inside of in the source.",
	"ui.bean.class.outermethod.name": "Outer method",
	"ui.bean.class.outermethod.desc": "The name of the method that contains this class, or null if this class is not enclosed in a method.",
	"ui.bean.class.outermethoddesc.name": "Outer method desc",
	"ui.bean.class.outermethoddesc.desc": "The descriptor of the method that contains this class, or null if this class is not enclosed in a method.",
	"ui.bean.class.decompile.name": "Decompile",
	"ui.bean.class.decompile.desc": "Decompile bytecode into java source code",
	"ui.bean.class.recompile.name": "Recompile",
	"ui.bean.class.recompile.desc": "Recompile decompiled code",
	"ui.bean.class.annotations.title": "Annotations",
	"ui.bean.class.annotations.ref.tooltip": "Type reference",
	"ui.bean.class.annotations.desc.tooltip": "Annotation descriptor",
	"ui.bean.class.annotations.type.tooltip": "Annotation type-path",
	"ui.bean.class.visibleannotations.name": "Visible annotations",
	"ui.bean.class.visibleannotations.desc": "List of runtime applicable annotations for the class.",
	"ui.bean.class.invisibleannotations.name": "Invisible annotations",
	"ui.bean.class.invisibleannotations.desc": "List of applicable annotations for the class.",
	"ui.bean.class.visibletypeannotations.name": "Visible type annotations",
	"ui.bean.class.visibletypeannotations.desc": "List of applicable type-annotations for the class.",
	"ui.bean.class.invisibletypeannotations.name": "Invisible type annotations",
	"ui.bean.class.invisibletypeannotations.desc": "List of applicable type-annotations for the class.",
	"ui.bean.class.attrs.name": "Other attributes",
	"ui.bean.class.attrs.desc": "List of non-standard attributes.",
	"ui.bean.class.innerclasses.name": "Inner classes",
	"ui.bean.class.innerclasses.desc": "List of inner classes.",
	"ui.bean.class.innerclasses.name.tooltip": "The internal name of an inner class.",
	"ui.bean.class.innerclasses.inner.tooltip": "The simple name of the inner class inside its enclosing class. May be null for anonymous inner classes.",
	"ui.bean.class.innerclasses.outer.tooltip": "The internal name of the class to which the inner class belongs. May be null.",
	"ui.bean.class.fields.name": "Fields",
	"ui.bean.class.fields.desc": "List of fields.",
	"ui.bean.class.methods.name": "Methods",
	"ui.bean.class.methods.desc": "List of methods",
	"ui.bean.class.module.name": "Module",
	"ui.bean.class.module.desc": "missing_translation",
	"ui.bean.class.interfaces.name": "Interfaces",
	"ui.bean.class.interfaces.desc": "List of implemented interfaces.",
	"ui.bean.class.nesthostclass.name": "Nest host",
	"ui.bean.class.nesthostclass.desc": "The internal name of the nest host class of this class. May be null.",
	"ui.bean.class.nestmembers.name": "Nest members",
	"ui.bean.class.nestmembers.desc": "The internal names of the nest members of this class. May be null",
	
	"ui.bean.field": "Properties",
	"ui.bean.field.access.name": "Access",
	"ui.bean.field.access.desc": "Access permissions such as public, private, static, etc.",
	"ui.bean.field.name.name": "Name",
	"ui.bean.field.name.desc": "Name of field.",
	"ui.bean.field.desc.name": "Desc",
	"ui.bean.field.desc.desc": "Type descriptor of field.",
	"ui.bean.field.signature.name": "Signature",
	"ui.bean.field.signature.desc": "Generic type descriptor.",
	"ui.bean.field.value.name": "Value",
	"ui.bean.field.value.desc": "Value of this constant field.",
	"ui.bean.field.attrs.name": "Other attributes",
	"ui.bean.field.attrs.desc": "List of non-standard attributes.",
	"ui.bean.field.visibleannotations.name": "Visible annotations",
	"ui.bean.field.visibleannotations.desc": "List of runtime applicable annotations for the field.",
	"ui.bean.field.invisibleannotations.name": "Invisible annotations",
	"ui.bean.field.invisibleannotations.desc": "List of applicable annotations for the field. Not accessible via reflective APIS.",
	"ui.bean.field.visibletypeannotations.name": "Visible type annotations",
	"ui.bean.field.visibletypeannotations.desc": "List of applicable type-annotations for the field.",
	"ui.bean.field.invisibletypeannotations.name": "Invisible type annotations",
	"ui.bean.field.invisibletypeannotations.desc": "List of applicable type-annotations for the field. Not accessible via reflective APIS.",
	
	"ui.bean.method.access.name": "Access",
	"ui.bean.method.access.desc": "Access permissions such as public, private, static, etc.",
	"ui.bean.method.name.name": "Name",
	"ui.bean.method.name.desc": "Name of method.",
	"ui.bean.method.desc.name": "Desc",
	"ui.bean.method.desc.desc": "Type descriptor of method.",
	"ui.bean.method.signature.name": "Signature",
	"ui.bean.method.signature.desc": "Generic type descriptor.",
	"ui.bean.method.exceptions.name": "Exceptions",
	"ui.bean.method.exceptions.desc": "List of exceptions the method can potentially throw.",
	"ui.bean.method.parameters.name": "Parameters",
	"ui.bean.method.parameters.desc": "Parameter debug information such as names and types.",
	"ui.bean.method.annotationdefault.name": "Annotation default",
	"ui.bean.method.annotationdefault.desc": "missing_translation",
	"ui.bean.method.instructions.name": "Edit instructions",
	"ui.bean.method.instructions.desc": "Method opcodes containing execution logic.",
	"ui.bean.method.instructions.find.title": "Search",
	"ui.bean.method.instructions.find.confirm": "Confirm",
	"ui.bean.method.trycatchblocks.name": "Try-catches",
	"ui.bean.method.trycatchblocks.desc": "Try-catch block information.",
	"ui.bean.method.trycatchblocks.start": "Start",
	"ui.bean.method.trycatchblocks.end": "End",
	"ui.bean.method.trycatchblocks.handler": "Handler",
	"ui.bean.method.trycatchblocks.type": "Type",
	"ui.bean.method.trycatchblocks.start.tooltip": "Start of the try block.",
	"ui.bean.method.trycatchblocks.end.tooltip": "End of the try block.",
	"ui.bean.method.trycatchblocks.handler.tooltip": "Start of the catch block.",
	"ui.bean.method.trycatchblocks.type.tooltip": "Type of exception caught. Leave blank for any type.",
	"ui.bean.method.maxstack.name": "Max stack",
	"ui.bean.method.maxstack.desc": "Maximum number of items allowed in the stack in the methods code.'",
	"ui.bean.method.maxlocals.name": "Max locals",
	"ui.bean.method.maxlocals.desc": "Maximum number of local variable indices.",
	"ui.bean.method.localvariables.name": "Local vars",
	"ui.bean.method.localvariables.desc": "Local variable debugging information such as their type, name, etc.",
	"ui.bean.method.label.name": "Label",
	"ui.bean.method.localvariable.start": "Start",
	"ui.bean.method.localvariable.end": "End",
	"ui.bean.method.localvariable.index.tooltip": "Index in the local variable table to use.",
	"ui.bean.method.localvariable.name.tooltip": "Variable name.",
	"ui.bean.method.localvariables.desc.tooltip": "Variable type descriptor.",
	"ui.bean.method.localvariables.signature.tooltip": "Generic type descriptor.",
	"ui.bean.method.visibleannotations.name": "Visible annotations",
	"ui.bean.method.visibleannotations.desc": "List of runtime applicable annotations for the method.",
	"ui.bean.method.invisibleannotations.name": "Invisible annotations",
	"ui.bean.method.invisibleannotations.desc": "List of applicable annotations for the method. Not accessible via reflective APIS.",
	"ui.bean.method.visibletypeannotations.name": "Visible type annotations",
	"ui.bean.method.visibletypeannotations.desc": "List of applicable type-annotations for the method.",
	"ui.bean.method.invisibletypeannotations.name": "Invisible type annotations",
	"ui.bean.method.invisibletypeannotations.desc": "List of applicable type-annotations for the method. Not accessible via reflective APIS.",
	"ui.bean.method.visibleannotableparametercount.name": "Visible parameter count",
	"ui.bean.method.visibleannotableparametercount.desc": "The number of method parameters than can have runtime visible annotations.",
	"ui.bean.method.invisibleannotableparametercount.name": "Invisible parameter count",
	"ui.bean.method.invisibleannotableparametercount.desc": "The number of method parameters than can have runtime invisible annotations.",
	"ui.bean.method.visiblelocalvariableannotations.name": "Visible variable annotations",
	"ui.bean.method.visiblelocalvariableannotations.desc": "List of applicable type-annotations for the method's variables.",
	"ui.bean.method.invisiblelocalvariableannotations.name": "Invisible variable annotations",
	"ui.bean.method.invisiblelocalvariableannotations.desc": "List of applicable type-annotations for the method's variables. Not accessible via reflective APIS.",
	
	"ui.bean.opcode.cst.desc": "Load constant's value. Can be any primitive or String.",
	"ui.bean.opcode.cst.name": "Value",
	"ui.bean.opcode.cst.type": "Value type",
	"ui.bean.opcode.type.name": "Type",
	"ui.bean.opcode.type.desc": "ASM Type",
	"ui.bean.opcode.desc.desc": "Descriptor of the member.",
	"ui.bean.opcode.desc.name": "Descriptor",
	"ui.bean.opcode.opcode.name": "Opcode",
	"ui.bean.opcode.opcode.desc": "Opcode to use, items shown are based on the type classified by ASM.",
	"ui.bean.opcode.itf.desc": "Does the method belong to an interface class?",
	"ui.bean.opcode.itf.name": "Interface",
	"ui.bean.opcode.label.desc": "Label offset in the bytecode",
	"ui.bean.opcode.label.name": "Label",
	"ui.bean.opcode.label.nullvalue": "<Empty>",
	"ui.bean.opcode.line.desc": "Line number this label value links to.",
	"ui.bean.opcode.line.name": "Line",
	"ui.bean.opcode.name.desc": "Name of the member.",
	"ui.bean.opcode.name.name": "Name",
	"ui.bean.opcode.owner.desc": "Owner (class) of the member.",
	"ui.bean.opcode.owner.name": "Owner",
	"ui.bean.opcode.operand.name": "Operand",
	"ui.bean.opcode.operand.desc": "Value of the integer to push onto the stack.",
	"ui.bean.opcode.start.desc": "Label indicating where the variable is defined.",
	"ui.bean.opcode.start.name": "Start",
	"ui.bean.opcode.value.desc": "Value",
	"ui.bean.opcode.value.name": "Value",
	"ui.bean.opcode.var.desc": "Points to a variable in the local variable table",
	"ui.bean.opcode.var.name": "Variable Index",
	"ui.bean.opcode.bsm.desc": "Boostrap Method",
	"ui.bean.opcode.bsm.name": "Boostrap Method",
	"ui.bean.opcode.bsmargs.desc": "Constants arguments, where the first is the Callsite information.",
	"ui.bean.opcode.bsmargs.name": "Bootstrap Arguments",
	"ui.bean.opcode.dflt.desc": "Location to jump to for fallback cases.",
	"ui.bean.opcode.dflt.name": "Default label",
	"ui.bean.opcode.keys.desc": "List of key.",
	"ui.bean.opcode.keys.name": "Keys",
	"ui.bean.opcode.labels.desc": "List of labels.",
	"ui.bean.opcode.labels.name": "Labels",
	"ui.bean.opcode.max.desc": "Maximum value for the case.",
	"ui.bean.opcode.max.name": "Max",
	"ui.bean.opcode.min.desc": "Minimum value for the case.",
	"ui.bean.opcode.min.name": "Min",
	"ui.bean.opcode.dims.name": "Dimensions",
	"ui.bean.opcode.dims.desc": "Number of dimensions in the array.",
	"ui.bean.opcode.incr.name": "Increment",
	"ui.bean.opcode.incr.desc": "Value to increment variable by.",
	"ui.bean.handle.tag.name": "Tag",
	"ui.bean.handle.tag.desc": "Values indicating diferent opcodes",
	"ui.bean.handle.owner.name": "Owner",
	"ui.bean.handle.owner.desc": "Class that owns the member",
	"ui.bean.handle.name.name": "Name",
	"ui.bean.handle.name.desc": "Member name.",
	"ui.bean.handle.descriptor.name": "Desc",
	"ui.bean.handle.descriptor.desc": "Member descriptor",
	"ui.bean.handle.isInterface.name": "Is Interface",
	"ui.bean.handle.isInterface.desc": "Does the member belong to an interface",
	"ui.bean.bsmarg.tag.name": "Tag",
	"ui.bean.bsmarg.tag.desc": "Values indicating diferent opcodes",
	"ui.bean.bsmarg.owner.name": "Owner",
	"ui.bean.bsmarg.owner.desc": "Class that owns the member",
	"ui.bean.bsmarg.name.name": "Name",
	"ui.bean.bsmarg.name.desc": "Member descriptor",
	"ui.bean.bsmarg.descriptor.name": "Desc",
	"ui.bean.bsmarg.descriptor.desc": "Member descriptor",
	"ui.bean.bsmarg.isInterface.name": "Is Interface",
	"ui.bean.bsmarg.isInterface.desc": "Does the member belong to an interface",
	"ui.bean.bsmarg.type0.name": "Type arg[0]",
	"ui.bean.bsmarg.type0.desc": "Type descriptor of member",
	"ui.bean.bsmarg.type2.name": "Type arg[2]",
	"ui.bean.bsmarg.type2.desc": "Type descriptor of member",
	"ui.bean.typeannotation.reftype.classtypeparameter": "Class Type Parameter",
	"ui.bean.typeannotation.reftype.methodtypeparameter": "Method Type Parameter",
	"ui.bean.typeannotation.reftype.classextends": "Class Extends",
	"ui.bean.typeannotation.reftype.classtypeparameterbound": "Class Type Parameter Bound",
	"ui.bean.typeannotation.reftype.methodtypeparameterbound": "Method Type Parameter Bound",
	"ui.bean.typeannotation.reftype.field": "Field",
	"ui.bean.typeannotation.reftype.methodreturn": "Method Return",
	"ui.bean.typeannotation.reftype.methodreceiver": "Method Receiver",
	"ui.bean.typeannotation.reftype.methodformalparameter": "Method Formal Parameter",
	"ui.bean.typeannotation.reftype.throws": "Throws",
	"ui.bean.typeannotation.reftype.localvariable": "Local Variable",
	"ui.bean.typeannotation.reftype.resourcevariable": "Resource Variable",
	"ui.bean.typeannotation.reftype.exceptionparameter": "Exception Parameter",
	"ui.bean.typeannotation.reftype.instanceof": "Instanceof",
	"ui.bean.typeannotation.reftype.new": "New",
	"ui.bean.typeannotation.reftype.constructorreference": "Constructor Reference",
	"ui.bean.typeannotation.reftype.methodreference": "Method Reference",
	"ui.bean.typeannotation.reftype.cast": "Cast",
	"ui.bean.typeannotation.reftype.constructorinvocationtypeargument": "Constructor Invocation Type Argument",
	"ui.bean.typeannotation.reftype.methodinvocationtypeargument": "Method Invocation Type Argument",
	"ui.bean.typeannotation.reftype.constructorreferencetypeargument": "Constructor Reference Type Argument",
	"ui.bean.typeannotation.reftype.methodreferencetypeargument": "Method Reference Type Argument",
	"ui.bean.typeannotation.reftype.unknown": "Unknown",
	
	"cfr": "CFR Decompiler",
	"cfr.aexagg.desc": "Remove nested exception handlers if they don't change semantics",
	"cfr.aexagg.name": "Aggressive exception optimization",
	"cfr.aggressivesizethreshold.desc": "Opcode count at which to trigger aggressive reductions",
	"cfr.aggressivesizethreshold.name": "Aggressive threshold",
	"cfr.allowcorrecting.desc": "Allow transformations which correct errors, potentially at the cost of altering emitted code behaviour.",
	"cfr.allowcorrecting.name": "Allow correcting",
	"cfr.arrayiter.desc": "Re-sugar array based iteration.",
	"cfr.arrayiter.name": "Array iteration",
	"cfr.collectioniter.desc": "Re-sugar collection based iteration.",
	"cfr.collectioniter.name": "Collection iteration",
	"cfr.commentmonitors.desc": "Replace monitors with comments - useful if we're completely confused.",
	"cfr.commentmonitors.name": "Comment monitors",
	"cfr.comments.desc": "Output comments describing decompiler status, fallback flags etc.",
	"cfr.comments.name": "Comment info",
	"cfr.decodeenumswitch.desc": "Re-sugar switch on enum",
	"cfr.decodeenumswitch.name": "Decode enum-switch",
	"cfr.decodefinally.desc": "Re-sugar finally statements",
	"cfr.decodefinally.name": "Decode finally",
	"cfr.decodelambdas.desc": "Re-build lambda functions",
	"cfr.decodelambdas.name": "Decode lambdas",
	"cfr.decodestringswitch.desc": "Re-sugar switch on String",
	"cfr.decodestringswitch.name": "Decode string-switch",
	"cfr.dumpclasspath.desc": "Dump class path for debugging purposes",
	"cfr.dumpclasspath.name": "Dump class path",
	"cfr.eclipse.desc": "Enable transformations to handle eclipse code better.",
	"cfr.eclipse.name": "Eclipse",
	"cfr.elidescala.desc": "Hide things which aren't helpful in scala output (serialVersionUID, @ScalaSignature).",
	"cfr.elidescala.name": "Clean Scala",
	"cfr.forcecondpropagate.desc": "Pull results of deterministic jumps back through some constant assignments.",
	"cfr.forcecondpropagate.name": "Force condition propagation",
	"cfr.forceexceptionprune.desc": "Try to extend and merge exceptions more aggressively.",
	"cfr.forceexceptionprune.name": "Force exception pruning",
	"cfr.forcereturningifs.desc": "Move return up to jump site.",
	"cfr.forcereturningifs.name": "Force returning ifs",
	"cfr.forcetopsort.desc": "Force basic block sorting. Useful for flow-obfuscated code.",
	"cfr.forcetopsort.name": "Force top-sort",
	"cfr.forcetopsortaggress.desc": "Force extra aggressive topsort options.",
	"cfr.forcetopsortaggress.name": "Force top-sort:aggressive",
	"cfr.forloopaggcapture.desc": "Allow for loops to aggresively roll mutations into update section, even if they don't appear to be involved with the predicate",
	"cfr.forloopaggcapture.name": "For-loop capturing",
	"cfr.hidebridgemethods.desc": "Hide methods with bridge access",
	"cfr.hidebridgemethods.name": "Hide bridge methods",
	"cfr.hidelangimports.desc": "Hide imports from java.lang.*",
	"cfr.hidelangimports.name": "Hide lang imports",
	"cfr.hidelongstrings.desc": "Hide very long strings - useful if obfuscators have placed fake code in strings",
	"cfr.hidelongstrings.name": "Hide long strings",
	"cfr.hideutf.desc": "Hide UTF8 characters - quote them instead of showing the raw characters",
	"cfr.hideutf.name": "Hide UTF8",
	"cfr.innerclasses.desc": "Include inner classes in decompilation of outer-class.",
	"cfr.innerclasses.name": "Decompile inner classes",
	"cfr.j14classobj.desc": "Reverse java 1.4 class object construction",
	"cfr.j14classobj.name": "Java 4 class object",
	"cfr.labelledblocks.desc": "Allow code to be emitted which uses labelled blocks, (handling odd forward gotos).",
	"cfr.labelledblocks.name": "Labelled blocks",
	"cfr.lenient.desc": "Be a bit more lenient in situations where we'd normally throw an exception",
	"cfr.lenient.name": "Lenient",
	"cfr.liftconstructorinit.desc": "Lift initialisation code common to all constructors into member initialisation",
	"cfr.liftconstructorinit.name": "Lift constructor init",
	"cfr.override.desc": "Generate @Override annotations (if method is seen to implement interface method, or override a base class method)",
	"cfr.override.name": "Emit @Override",
	"cfr.pullcodecase.desc": "Pull code into case statements aggressively.",
	"cfr.pullcodecase.name": "Pull code case",
	"cfr.recover.desc": "Allow more and more aggressive options to be set if decompilation fails",
	"cfr.recover.name": "Recover",
	"cfr.recovertypeclash.desc": "Split lifetimes where analysis caused type clash",
	"cfr.recovertypeclash.name": "Recover type clash",
	"cfr.recovertypehints.desc": "Recover type hints for iterators from first pass.",
	"cfr.recovertypehints.name": "Recover type hints",
	"cfr.recpass.desc": "Decompile specifically with recovery options from pass #X. (really only useful for debugging)",
	"cfr.recpass.name": "Recpass",
	"cfr.relinkconststring.desc": "Relink constant strings - if there is a local reference to a string which matches a static final, use the static final.",
	"cfr.relinkconststring.name": "Relink const-strings",
	"cfr.removebadgenerics.desc": "Hide generics where we've obviously got it wrong, and fallback to non-generic",
	"cfr.removebadgenerics.name": "Hide bad generics",
	"cfr.removeboilerplate.desc": "Remove boilderplate functions - constructor boilerplate, lambda deserialisation etc",
	"cfr.removeboilerplate.name": "Remove boilerplate",
	"cfr.removedeadmethods.desc": "Remove pointless methods - default constructor etc",
	"cfr.removedeadmethods.name": "Remove unused methods",
	"cfr.removeinnerclasssynthetics.desc": "Remove (where possible) implicit outer class references in inner classes",
	"cfr.removeinnerclasssynthetics.name": "Remove inner class synthetics",
	"cfr.renamedupmembers.desc": "Rename ambiguous/duplicate members.",
	"cfr.renamedupmembers.name": "Rename duplicate members",
	"cfr.renameenumidents.desc": "Rename ENUM identifiers which do not match their 'expected' string names.",
	"cfr.renameenumidents.name": "Rename enum identifiers",
	"cfr.renameillegalidents.desc": "Rename identifiers which are not valid java identifiers.",
	"cfr.renameillegalidents.name": "Rename illegal identifiers",
	"cfr.renamesmallmembers.desc": "Rename small members. Useful for proguard-like obfuscation.",
	"cfr.renamesmallmembers.name": "Rename small members",
	"cfr.showinferrable.desc": "Decorate methods with explicit types if not implied by arguments.",
	"cfr.showinferrable.name": "Show inferrable",
	"cfr.showops.desc": "Show some (cryptic!) debug info.",
	"cfr.showops.name": "Show OPs",
	"cfr.showversion.desc": "Show CFR version used in header",
	"cfr.showversion.name": "Show version",
	"cfr.silent.desc": "Don't display state while decompiling",
	"cfr.silent.name": "Silent",
	"cfr.staticinitreturn.desc": "Try to remove return from static init",
	"cfr.staticinitreturn.name": "Static init return",
	"cfr.stringbuffer.desc": "Convert new Stringbuffer().add.add.add to string + string + string",
	"cfr.stringbuffer.name": "Clean StringBuffer",
	"cfr.stringbuilder.desc": "Convert new Stringbuilder().add.add.add to string + string + string",
	"cfr.stringbuilder.name": "Clean StringBuilder",
	"cfr.stringconcat.desc": "Convert usages of StringConcatFactor to string + string + string",
	"cfr.stringconcat.name": "Deinfigy string concat",
	"cfr.sugarasserts.desc": "Re-sugar assert calls",
	"cfr.sugarasserts.name": "Sugar asserts",
	"cfr.sugarboxing.desc": "Where possible, remove pointless boxing wrappers",
	"cfr.sugarboxing.name": "Sugar boxing",
	"cfr.sugarenums.desc": "Re-sugar enums",
	"cfr.sugarenums.name": "Sugar enums",
	"cfr.switchexpression.desc": "Java 13 switch as expressions, where switches return values.",
	"cfr.switchexpression.name": "Switch expressions",
	"cfr.tidymonitors.desc": "Remove support code for monitors - eg catch blocks just to exit a monitor",
	"cfr.tidymonitors.name": "Tidy monitors",
	"cfr.tryresources.desc": "When active attempt to display try-catch blocks as try-with-resource blocks.",
	"cfr.tryresources.name": "Use try-with-resource",
	"cfr.usenametable.desc": "Use local variable name table if present.",
	"cfr.usenametable.name": "Use name table"
}